bind = [
  'network:$VALIDATOR_CONFIG_BIND_NETWORK',
  'component:$VALIDATOR_CONFIG_BIND_COMPONENT',
  'consensus:$VALIDATOR_CONFIG_BIND_CONSENSUS'
]

peering = 'static'

endpoint = '$VALIDATOR_CONFIG_ENDPOINT'

peers = [$VALIDATOR_CONFIG_PEERS]

scheduler = 'parallel'

network_public_key = '$VALIDATOR_CONFIG_NETWORK_PUBLIC_KEY'
network_private_key = '$VALIDATOR_CONFIG_NETWORK_PRIVATE_KEY'

minimum_peer_connectivity = 3

maximum_peer_connectivity = 10

# The following settings are for tuning the thread allocation in several of the
# thread pools used by the validator.  These settings should be modified by
# advanced users only.

# The maximum number of threads in the component worker pool
# component_thread_pool_workers = 10

# The maximum number of threads in the network worker pool
# network_thread_pool_workers = 10

# The maximum number of threads in the signature verification worker pool
# signature_thread_pool_workers = 3

# The host and port for Open TSDB database used for metrics
# opentsdb_url = ''

# The name of the database used for storing metrics
# opentsdb_db = ''

# opentsdb_username = ''

# opentsdb_password = ''

# The type of authorization that must be performed for the different type of
# roles on the network. The different supported authorization types are "trust"
# and "challenge". The default is "trust".

# [roles]
# network = 'trust'

# Any off-chain transactor permission roles. The roles should match the roles
# stored in state for transactor permissioning. Due to the roles having . in the
# key, the key must be wrapped in quotes so toml can process it. The value
# should be the file name of a policy stored in the policy_dir.

# [permissions]
# transactor = 'policy.example'
# "transactor.transaction_signer" = 'policy.example'